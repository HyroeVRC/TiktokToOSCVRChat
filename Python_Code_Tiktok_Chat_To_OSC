import asyncio
from pythonosc import udp_client
from TikTokLive import TikTokLiveClient
from TikTokLive.events import GiftEvent, CommentEvent

class TikTokEventHandler:
    def __init__(self, ip: str, port: int, username: str):
        self.rose = 0
        self.galaxy = 0
        self.boop_toggle = 0
        self.client = udp_client.SimpleUDPClient(ip, port)
        self.tiktok_client = TikTokLiveClient(unique_id=username)

        # Register event handlers
        self.tiktok_client.on(GiftEvent, self.handle_gift)
        self.tiktok_client.on(CommentEvent, self.handle_comment)

    def send_request(self, parameter: str, value: int):
        # Send a request to the IP address with the current state of the parameter.
        self.client.send_message(f"/avatar/parameters/{parameter}", value)

    async def handle_gift(self, event: GiftEvent):
        # Handle gift events and send appropriate requests.
        if event.gift.name == "Rose":
            self.rose = 1
            self.send_request("rose", 1)
            await asyncio.sleep(2)
            self.rose = 0
            self.send_request("rose", 0)
        elif event.gift.name == "Galaxy":
            self.galaxy = 1
            self.send_request("galaxy", 1)
            await asyncio.sleep(2)
            self.galaxy = 0
            self.send_request("galaxy", 0)

    async def handle_comment(self, event: CommentEvent):
        # Handle comment events and send appropriate requests.
        print(f"{event.user.nickname}: {event.comment}")
        if event.comment.lower() == "boop":
            self.boop_toggle = 1
            self.send_request("BoopToggle", 1)
            await asyncio.sleep(2)
            self.boop_toggle = 0
            self.send_request("BoopToggle", 0)

    async def connect(self):
        # Attempt to connect to TikTok Live and retry on failure.
        retries = 5
        for attempt in range(retries):
            try:
                await self.tiktok_client.connect()
                print("Connected successfully")
                break  # Exit loop if successful
            except Exception as e:
                print(f"Attempt {attempt + 1} failed: {e}")
                if attempt < retries - 1:
                    await asyncio.sleep(5)  # Wait before retrying
                else:
                    print("All retry attempts failed.")
                    raise  # Re-raise the exception after final attempt

async def main():
    handler = TikTokEventHandler(ip="127.0.0.1", port=9000, username="@your_username") # YOUR NAMETAG HERE
    await handler.connect()

if __name__ == '__main__':
    asyncio.run(main())
